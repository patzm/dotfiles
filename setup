#!/usr/bin/env python3

import argparse
import os
import subprocess

def run(config):
    setup_file_path = os.path.join(os.path.dirname(__file__), 'setup.yml')

    cmd = ['ansible-playbook', setup_file_path]
    env = os.environ.copy()
    ansible_library_paths = [f"{os.getcwd()}/modules/yay"]
    if "ANSIBLE_LIBRARY" in env:
        ansible_library_paths.extend(env["ANSIBLE_LIBRARY"].split(":"))
    env["ANSIBLE_LIBRARY"] = ":".join(ansible_library_paths)

    if config.K:
        cmd.append('-K')

    if config.hosts:
        cmd.append('-e custom_hosts=all')
        cmd.append('-i')
        cmd.append(','.join(config.hosts) + ',')

    if config.tags:
        cmd.append('--tags')
        cmd.append(','.join(config.tags))

    print('Invoking {}'.format(' '.join(cmd)))
    subprocess.call(cmd, env=env)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='facilitator to launch setup.yml')
    parser.add_argument('-K', action='store_true', help='prompt for SUDO password')
    parser.add_argument('--hosts', nargs='*', help='specify any remote hosts if not the local host')
    parser.add_argument('--tags', nargs='*', help='specify tags')
    args = parser.parse_args()
    run(config=args)

# vim: set filetype=python : 

