---
- name: create directory for virtual environments
  file:
    path: '{{ user_home_dir }}/.venvs'
    state: directory

- name: "find the pyenv executable"
  find:
    paths: "{{ user_home_dir }}/.pyenv/bin"
    use_regex: true
    pattern: "^pyenv$"
    file_type: any
  register: pyenv_bin

- name: "check if pyenv can be executed"
  shell: "command -v {{ pyenv_bin.files[0].path | default('pyenv') }} >/dev/null 2>&1"
  register: pyenv_exists
  ignore_errors: yes

- name: "install python {{ default_python_version }}"
  command: "{{ pyenv_bin.files[0].path | default('pyenv') }} install -s {{ default_python_version }}"
  when: pyenv_exists.rc == 0

- name: "set {{ default_python_version }} as the global pyenv version"
  command: "{{ pyenv_bin.files[0].path | default('pyenv') }} global {{ default_python_version }}"
  when: pyenv_exists.rc == 0

- name: "install virtualenv and virtualenvwrapper"
  command: "{{ pyenv_bin.files[0].path | default('pyenv') }} exec pip install virtualenv virtualenvwrapper"
  when: pyenv_exists.rc == 0

- name: create the bpython config folder
  file:
    path: '{{ bpython_config_dir }}'
    state: directory

- name: copy the bpython config file
  copy:
    src: '{{ role_path }}/files/bpython/config'
    dest: '{{ bpython_config_dir }}/config'
    force: yes

- name: create the virtualenvwrapper config directory
  file:
    path: "{{ virtualenvwrapper_config_dir }}"
    state: directory

- name: copy the virtualenvwrapper configurations
  copy:
    src: "{{ item }}"
    dest: "{{ virtualenvwrapper_config_dir }}"
  with_fileglob: "virtualenvwrapper/*"
