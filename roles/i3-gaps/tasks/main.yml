---
- name: make sure that the i3 package is not installed (i3 without gaps)
  become: yes
  package: name="i3*" state=absent
  tags: i3

- name: pre-installation routines & configuration files
  block:
    - name: detect if i3-gaps is already installed
      shell: command -v i3 >/dev/null 2>&1
      register: cmd_exists_i3_gaps
      ignore_errors: yes

    - name: detect if light is already installed
      shell: command -v light >/dev/null 2>&1
      register: cmd_exists_light
      ignore_errors: yes

    - name: create i3 config directory
      file:
        path: '{{ i3_config_dir }}'
        state: directory

    - name: create the dunst config directory
      file:
        path: '{{ dunst_config_dir }}'
        state: directory

    - name: copy the i3 config file
      copy:
        src: '{{ role_path }}/files/config'
        dest: '{{ i3_config_file }}'
        force: yes

    - name: create the picom config folder
      file:
        path: '{{ picom_config_dir }}'
        state: directory

    - name: copy the picom config file
      copy:
        src: '{{ role_path }}/files/picom.conf'
        dest: '{{ picom_config_file }}'
        force: yes

    - name: copy the dunst config file
      copy:
        src: '{{ role_path }}/files/dunstrc'
        dest: '{{ dunst_config_file }}'
        force: yes

    - name: copy the .xprofile file
      copy:
        src: '{{ role_path }}/files/.xprofile'
        dest: '{{ user_home_dir }}/.xprofile'
        force: yes

    - name: copy the shell scripts
      copy:
        src: '{{ role_path }}/files/{{ item }}'
        dest: '{{ user_bin_dir }}/{{ item }}'
        owner: "{{ ansible_env.USER }}"
        group: "{{ user_group }}"
        mode: 0700
        force: yes
      with_items:
      - "{{ detect_monitors_script }}"
      - "{{ note_script }}"
      - "{{ screenshot_script }}"

    - name: insert the screenshot script location into the config file
      replace:
        path: '{{ i3_config_file }}'
        regexp: '{{ placeholder_screenshot_script }}'
        replace: '{{ user_bin_dir }}/{{ screenshot_script }}'

    - name: "legacy : ensure that the old ~/.i3 config folder does not exist"
      file:
        path: '{{ user_home_dir }}/.i3'
        state: absent

    - name: copy .Xresources
      copy:
        src: '{{ role_path }}/files/.Xresources'
        dest: '{{ user_home_dir }}/.Xresources'
        owner: "{{ ansible_env.USER }}"
        group: "{{ user_group }}"
        mode: 0600
        force: yes
    
    - name: make sure the .Xresources.d directory exists
      file:
        path: '{{ xresources_dir }}'
        state: directory

    - name: copy the .Xinstance file for the user to configure
      copy:
        src: '{{ role_path }}/files/.Xinstance'
        dest: '{{ xresources_dir }}/instance'
        owner: "{{ ansible_env.USER }}"
        group: "{{ user_group }}"
        mode: 0600
        force: no
    
    - name: copy the monitors template file for the user to configure
      copy:
        src: '{{ role_path }}/files/monitors.in'
        dest: '{{ xresources_dir }}/monitors.in'
        owner: "{{ ansible_env.USER }}"
        group: "{{ user_group }}"
        mode: 0600
        force: yes

    - name: copy the .Xcolors file
      copy:
        src: '{{ role_path }}/files/.Xcolors'
        dest: '{{ xresources_dir }}/colors.default'
        force: yes

    - name: reload .Xresources
      command: xrdb .Xresources
      args:
        chdir: '{{ user_home_dir }}'
  tags: [i3, dotfiles-i3]

- name: copy the custom xorg.conf
  become: yes
  copy:
    src: '{{ role_path }}/files/synaptics.conf'
    dest: '/etc/X11/xorg.conf.d/70-touchpad.conf'
    owner: root
    group: root
    mode: 0644
  tags: [i3, dotfiles-root]

- name: i3-gaps and dependencies installation
  block:
    - name: install rofi, picom, nitrogen, and synaptics touchpad drivers
      become: yes
      package: name={{ item }} state=present
      with_items:
      - rofi
      - picom
      - nitrogen
      - "{{ synaptics_input_package }}"

    - name: install i3-gaps
      include_tasks: "{{ i3_gaps_install_tasks }}"
      with_first_found:
        - files:
          - "{{ ansible_distribution|lower }}.yml"
          - "from-source.yml"
          paths: 'install-i3'
      loop_control:
        loop_var: i3_gaps_install_tasks
      when: cmd_exists_i3_gaps.rc > 0

    - name: install light
      include_tasks: "{{ light_install_tasks }}"
      with_first_found:
        - files:
          - "{{ ansible_distribution|lower }}.yml"
          - "from-source.yml"
          paths: 'install-light'
      loop_control:
        loop_var: light_install_tasks
      when: cmd_exists_light.rc > 0

    - name: "light: enable current user to change the brightness"
      user:
        name: "{{ ansible_user_id }}"
        groups: video,
        append: yes

    - name: install i3-gaps requirements from source
      include_tasks: font-awesome.yml

    - name: install autorandr
      import_role:
        name: autorandr
  tags: i3

- name: install and/or configure polybar
  import_role:
    name: polybar
