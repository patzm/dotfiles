# Set the mod key
# Mod1: ALT
# Mod4: Win/CMD
set_from_resource $mod  i3.mod_primary    Mod1
set_from_resource $mod2 i3.mod_secondary  Mod4

# Font
font pango:Cascadia Code PL Regular 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
floating_maximum_size 1920 x 1080

# Disable focusing a window on mouse hover over
focus_follows_mouse no

# Start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# Kill focused window
bindsym $mod+Shift+q kill

# Start a program launcher
bindsym $mod+d exec --no-startup-id "rofi -show drun"
# Start a all-in-one rofi menu
bindsym $mod2+d exec --no-startup-id "rofi -combi-modi drun,window,ssh,run -show combi -modi combi"
# Start a open-window selector
bindsym $mod+Tab exec --no-startup-id "rofi -show window"

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Set split mode to horizontal/vertical
bindsym $mod+m split h
bindsym $mod+n split v

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# Change container layout (stacked, tabbed)
bindsym $mod+e layout default
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed

# Toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# Focus the parent container
bindsym $mod+a focus parent

# Focus the child container
bindsym $mod+Shift+a focus child

# Configure workspace names
set $w1 "1 "
set $w2 "2 "
set $w3 "3  "
set $w4 "4 "
set $w5 "5 "
set $w6 "6 "
set $w7 "7 "
set $w8 "8 "
set $w9 "9 "
set $w10 "10 "

# Configure workspace monitors
exec_always --no-startup-id detect-monitors

set_from_resource $mw1  i3.monitor_1 primary
set_from_resource $mw2  i3.monitor_2 primary
set_from_resource $mw3  i3.monitor_2 primary
set_from_resource $mw4  i3.monitor_1 primary
set_from_resource $mw5  i3.monitor_2 primary
set_from_resource $mw6  i3.monitor_2 primary
set_from_resource $mw7  i3.monitor_1 primary
set_from_resource $mw8  i3.monitor_2 primary
set_from_resource $mw9  i3.monitor_1 primary
set_from_resource $mw10 i3.monitor_1 primary

# Assign workspaces to monitors
workspace 1  output $mw1
workspace 2  output $mw2
workspace 3  output $mw3
workspace 4  output $mw4
workspace 5  output $mw5
workspace 6  output $mw6
workspace 7  output $mw7
workspace 8  output $mw8
workspace 9  output $mw9
workspace 10 output $mw10

# Switch to workspace n shorcuts
bindsym $mod+1 workspace number $w1
bindsym $mod+2 workspace number $w2
bindsym $mod+3 workspace number $w3
bindsym $mod+4 workspace number $w4
bindsym $mod+5 workspace number $w5
bindsym $mod+6 workspace number $w6
bindsym $mod+7 workspace number $w7
bindsym $mod+8 workspace number $w8
bindsym $mod+9 workspace number $w9
bindsym $mod+0 workspace number $w10

# Assign workspaces with their new names to monitors
workspace $w1  output $mw1
workspace $w2  output $mw2
workspace $w3  output $mw3
workspace $w4  output $mw4
workspace $w5  output $mw5
workspace $w6  output $mw6
workspace $w7  output $mw7
workspace $w8  output $mw8
workspace $w9  output $mw9
workspace $w10 output $mw10

# Force move all workspaces to their corresponding outputs
exec_always --no-startup-id i3-msg "workspace $w1,  move workspace to output $mw1"
exec_always --no-startup-id i3-msg "workspace $w2,  move workspace to output $mw2"
exec_always --no-startup-id i3-msg "workspace $w3,  move workspace to output $mw3"
exec_always --no-startup-id i3-msg "workspace $w4,  move workspace to output $mw4"
exec_always --no-startup-id i3-msg "workspace $w5,  move workspace to output $mw5"
exec_always --no-startup-id i3-msg "workspace $w6,  move workspace to output $mw6"
exec_always --no-startup-id i3-msg "workspace $w7,  move workspace to output $mw7"
exec_always --no-startup-id i3-msg "workspace $w8,  move workspace to output $mw8"
exec_always --no-startup-id i3-msg "workspace $w9,  move workspace to output $mw9"
exec_always --no-startup-id i3-msg "workspace $w10, move workspace to output $mw10"

# switch to neighbouring workspaces
bindsym $mod+Shift+Left workspace prev
bindsym $mod+Shift+Right workspace next

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $w1
bindsym $mod+Shift+2 move container to workspace number $w2
bindsym $mod+Shift+3 move container to workspace number $w3
bindsym $mod+Shift+4 move container to workspace number $w4
bindsym $mod+Shift+5 move container to workspace number $w5
bindsym $mod+Shift+6 move container to workspace number $w6
bindsym $mod+Shift+7 move container to workspace number $w7
bindsym $mod+Shift+8 move container to workspace number $w8
bindsym $mod+Shift+9 move container to workspace number $w9
bindsym $mod+Shift+0 move container to workspace number $w10

# Reload the configuration file
bindsym $mod+Shift+c exec --no-startup-id xrdb $HOME/.Xresources && i3-msg reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r exec --no-startup-id xrdb $HOME/.Xresources && i3-msg restart

# Trigger detecting a new display configuration
bindsym $mod+Shift+d exec --no-startup-id autorandr --change && nitrogen --restore

# Screenshot control
bindsym --release $mod+$mod2+p	exec --no-startup-id <screenshot-script> -p ~/Pictures/screenshots -r
bindsym --release $mod+p		exec --no-startup-id <screenshot-script> -p ~/Pictures/screenshots -s

# Enable volume± and mute
bindsym XF86AudioRaiseVolume    exec --no-startup-id "amixer -q -D pulse sset Master 5%+ unmute"
bindsym XF86AudioLowerVolume    exec --no-startup-id "amixer -q -D pulse sset Master 5%- unmute"
bindsym XF86AudioMute           exec --no-startup-id "amixer -q -D pulse sset Master toggle"

# Enable playback control
bindsym XF86AudioPlay   exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause  exec --no-startup-id playerctl pause
bindsym XF86AudioNext   exec --no-startup-id playerctl next
bindsym XF86AudioPrev   exec --no-startup-id playerctl previous

# Enable Birghtness±
bindsym XF86MonBrightnessUp     exec light -A 5
bindsym XF86MonBrightnessDown   exec light -U 5

bindsym XF86KbdBrightnessUp     exec light -k -A 10
bindsym XF86KbdBrightnessDown   exec light -k -U 10

# Create a fast note
bindsym $mod+Shift+n exec i3-sensible-terminal --title "i3-note" -e bash -c "~/bin/note"

# Resize window (you can also use the mouse for that)
set $rs	15
mode "mode_resize" {
    bindsym l resize shrink width $rs px or $rs ppt
    bindsym k resize grow height $rs px or $rs ppt
    bindsym j resize shrink height $rs px or $rs ppt
    bindsym h resize grow width $rs px or $rs ppt

    # same bindings, but for the arrow keys
    bindsym Left    resize shrink width $rs px or $rs ppt
    bindsym Down    resize grow height $rs px or $rs ppt
    bindsym Up      resize shrink height $rs px or $rs ppt
    bindsym Right   resize grow width $rs px or $rs ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "mode_resize"

# Move floating windows
bindsym $mod+Shift+m mode "mode_move" focus floating
mode "mode_move" {
    bindsym $mod+Tab focus right

    bindsym Left  move left
    bindsym Down  move down
    bindsym Up    move up
    bindsym Right move right

    bindsym h     move left
    bindsym j     move down
    bindsym k     move up
    bindsym l     move right

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Create Log out, Reboot, Poweroff bindings
set $mode_system System (l) lock | (e) logout | (s) suspend | (h) hibernate | (r) reboot | (Shift+s) shutdown
mode "$mode_system" {
    bindsym l       exec light-locker-command -l,   mode "default"
    bindsym e       exec i3-msg exit,               mode "default"
    bindsym s       exec systemctl suspend,         mode "default"
    bindsym h       exec systemctl hibernate,       mode "default"
    bindsym r       exec systemctl reboot,          mode "default"
    bindsym Shift+s exec systemctl poweroff,        mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

# Layouting
for_window [class="^.*"] border pixel 3
gaps inner 15
gaps outer 5
smart_gaps on

# Window assignments
# call xprop on the command line and click the window you want to identiy. On 
# the output you can find the line
#   WM_CLASS(STRING) = "<instance_name>", "<class_name>"
# use this information to assign windows to workspaces
assign [class="(?i)firefox"] $w1
assign [class="(?i)jetbrains-pycharm"] $w2
assign [class="(?i)mendeley desktop"] $w6
assign [class="(?i)google-chrome"] $w7
assign [class="(?i)thunderbird"] $w8
assign [class="(?i)slack"] $w8
assign [class="(?i)minetime"] $w8
assign [class="(?i)mailspring"] $w8
assign [class="(?i)gitkraken"] $w9

for_window [class="(?i)calculator"] floating enable
for_window [class="(?i)plexamp"] floating enable
for_window [class="(?i)java-lang-thread"] floating enable
for_window [title="^i3-note$"] floating enable

# Configure keyboard layout toggles
exec_always --no-startup-id setxkbmap us,de -option 'grp:alt_space_toggle'

# Make sure the display configuration is loaded properly
exec --no-startup-id autorandr --change

# Re-load the last wallpaper setting
exec --no-startup-id nitrogen --restore

# Launch the network applet
exec_always --no-startup-id nm-applet

# Launch the Bluetooth applet
exec --no-startup-id blueman-applet

# Launch the screen locker
exec --no-startup-id light-locker

# Launch the sound switcher indicator
exec --no-startup-id indicator-sound-switcher

# Launch the notification daemon
exec --no-startup-id dunst

# Program launches
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Start composite window manager
exec --no-startup-id picom -b

# Disable automatic launching of deskop along with nautilus
exec --no-startup-id gsettings set org.gnome.desktop.background show-desktop-icons false

# make sure the gnome keyring is launched on login
exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=secrets
